{"version":3,"sources":["images/logo.png","supportProduct/SupportProduct.js","index.js"],"names":["requestDomain","document","getElementById","getAttribute","MySwal","withReactContent","Swal","SupportProduct","props","useState","show","setShow","showAdd","setShowAdd","showUpdate","setShowUpdate","showId","showCode","setCode","showName","setName","showQty","setQty","showPrice","setPrice","showRealPrice","setRealPrice","showMarca","setMarca","showType","setType","listProducts","setListProducts","useEffect","getEventProd","a","myHeaders","Headers","append","fetch","headers","method","resp","json","awResp","updateEventProd","id","body","JSON","stringify","code","value","name","qty","price","realPrice","marca","type","auxResp","fire","tittle","mssg","html","status","icon","addEventProd","FormModalProduct","Modal","className","Header","closeButton","Body","FormLabel","FormControl","Footer","Button","variant","onClick","FormModalProductUpdate","onChange","e","target","Container","fluid","Row","Col","sm","md","lg","Image","src","Logo","style","float","href","faPlus","Table","bordered","size","responsive","map","product","_id","title","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","faTrashAlt","onHide","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bcb10986.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3997bad4.png\";","import React, { useState, useEffect } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { FormControl, FormLabel } from 'react-bootstrap'\r\nimport { Button } from 'react-bootstrap';\r\nimport { Image } from 'react-bootstrap';\r\nimport Logo from '../images/logo.png'\r\nimport Table from 'react-bootstrap/Table'\r\nimport './SupportProduct.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst requestDomain = document.getElementById(\"requestPath\").getAttribute(\"data-server\");\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\n\r\n\r\nexport default function SupportProduct(props) {\r\n    //Estados\r\n    const [show, setShow] = useState(false);\r\n    const [showAdd, setShowAdd] = useState(false);\r\n    const [showUpdate, setShowUpdate] = useState(false);\r\n\r\n    //Para cambiar campos\r\n    const [showId, setId] = useState('');\r\n    const [showCode, setCode] = useState('');\r\n    const [showName, setName] = useState('');\r\n    const [showQty, setQty] = useState();\r\n    const [showPrice, setPrice] = useState();\r\n    const [showRealPrice, setRealPrice] = useState();\r\n    const [showMarca, setMarca] = useState('');\r\n    const [showType, setType] = useState('');\r\n\r\n    //GET PRODUCTS\r\n    const [listProducts, setListProducts] = useState([]);\r\n    useEffect(() => {\r\n        getEventProd();\r\n    }, []);\r\n\r\n    var getEventProd = async function () {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append('Content-Type', 'application/json');\r\n        let resp = await fetch(requestDomain + \"/admin/getProducts\",\r\n            {\r\n                headers: myHeaders,\r\n                method: \"GET\"\r\n            }\r\n        );\r\n        let awResp = await resp.json();\r\n        //const awResp2 = Array.from(awResp);\r\n        //const awResp2 = Object.values(awResp);\r\n        setListProducts(awResp);\r\n        return;\r\n    };\r\n\r\n    //Segunda forma dinamica de consulta\r\n    /* let viewProducts = listProducts.map((product, i) => {\r\n        return(\r\n            <tr key={i}>\r\n                <td>{product.code}</td>\r\n                <td>{product.name}</td>\r\n                <td>{product.qty}</td>\r\n                <td>{product.price}</td>\r\n                <td>{product.realPrice}</td>\r\n                <td>{product.marca}</td>\r\n                <td>{product.type}</td>\r\n            </tr>\r\n        );\r\n    }); */\r\n\r\n    //DELETE PRODUCT\r\n    var deleteEventProd = function (id, name) {\r\n        MySwal.fire({\r\n            title: '¿Estas seguro?',\r\n            html: \"Si elimina este producto <strong class='text-danger'>\"+name+\"</strong> sera definitivo!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, eliminar!'\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                let resp = await fetch(requestDomain + \"/admin/deleteProduct/\" + id,\r\n                    {\r\n                        method: \"DELETE\"\r\n                    }\r\n                );\r\n                let auxResp = await resp.json();\r\n                getEventProd();\r\n                Swal.fire(\r\n                    auxResp.mssg,\r\n                    (auxResp.status === 1) ? \"<i>Producto eliminado</i>\" : \"<i>ERROR</i>\",\r\n                    (auxResp.status === 1) ? 'success' : 'error'\r\n                )\r\n            }\r\n        })\r\n        return;\r\n    };\r\n\r\n    //Get ONE PRODUCT\r\n    var getEventOneProd = async function (id) {\r\n        let resp = await fetch(requestDomain + \"/admin/getProduct/\" + id,\r\n            {\r\n                method: \"GET\"\r\n            }\r\n        );\r\n        let awResp = await resp.json();\r\n        //const arrResp = Array.from(awResp);\r\n        const arrResp = Object.values(awResp);\r\n\r\n        let idUpdate = arrResp[0];\r\n        let code = arrResp[1];\r\n        let name = arrResp[2];\r\n        let qty = arrResp[3];\r\n        let price = arrResp[4];\r\n        let realPrice = arrResp[5];\r\n        let marca = arrResp[6];\r\n        let type = arrResp[7];\r\n\r\n        setId(idUpdate);\r\n        setCode(code);\r\n        setName(name);\r\n        setQty(qty);\r\n        setPrice(price);\r\n        setRealPrice(realPrice);\r\n        setMarca(marca);\r\n        setType(type);\r\n\r\n        return;\r\n    };\r\n    //UPDATE PRODUCT\r\n    var updateEventProd = async function (id) {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append('Content-Type', 'application/json');\r\n        let resp = await fetch(requestDomain + \"/api/products/\" + id,\r\n            {\r\n                method: \"PUT\",\r\n                headers: myHeaders,\r\n                body: JSON.stringify(\r\n                    {\r\n                        code: document.getElementById(\"codeUpdate\").value,\r\n                        name: document.getElementById(\"nameUpdate\").value,\r\n                        qty: document.getElementById(\"qtyUpdate\").value,\r\n                        price: document.getElementById(\"priceUpdate\").value,\r\n                        realPrice: document.getElementById(\"realPriceUpdate\").value,\r\n                        marca: document.getElementById(\"marcaUpdate\").value,\r\n                        type: document.getElementById(\"typeUpdate\").value\r\n                    }\r\n                )\r\n            }\r\n        );\r\n\r\n        let auxResp = await resp.json();\r\n        getEventProd();\r\n        await MySwal.fire({\r\n            tittle: \"<strong>\" + auxResp.mssg + \"</strong>\",\r\n            html: (auxResp.status === 1) ? <i>Producto modificado</i> : <i>ERROR</i>,\r\n            icon: (auxResp.status === 1) ? 'success' : 'error'\r\n        })\r\n        return;\r\n    };\r\n\r\n    //ADD PRODUCT\r\n    var addEventProd = async function () {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append('Content-Type', 'application/json');\r\n        let resp = await fetch(requestDomain + \"/admin/addProduct\",\r\n            {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: JSON.stringify(\r\n                    {\r\n                        code: document.getElementById(\"code\").value,\r\n                        name: document.getElementById(\"name\").value,\r\n                        qty: document.getElementById(\"qty\").value,\r\n                        price: document.getElementById(\"price\").value,\r\n                        realPrice: document.getElementById(\"realPrice\").value,\r\n                        marca: document.getElementById(\"marca\").value,\r\n                        type: document.getElementById(\"type\").value\r\n                    }\r\n                )\r\n            }\r\n        );\r\n\r\n        let auxResp = await resp.json();\r\n        getEventProd();\r\n        await MySwal.fire({\r\n            tittle: \"<strong>\" + auxResp.mssg + \"</strong>\",\r\n            html: (auxResp.status === 1) ? <i>Producto agregado</i> : <i>ERROR</i>,\r\n            icon: (auxResp.status === 1) ? 'success' : 'error'\r\n        })\r\n        return;\r\n    };\r\n\r\n    function FormModalProduct(props) {\r\n        return (\r\n            <Modal {...props} className=\"modal\" aria-labelledby=\"contained-modal-title-center\">\r\n                <Modal.Header closeButton>\r\n                    <h1>Nuevo Producto</h1>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"modalBody\">\r\n                    <>\r\n                        <FormLabel> Código de barras *</FormLabel>\r\n                        <FormControl id=\"code\" />\r\n\r\n                        <FormLabel> Nombre *</FormLabel>\r\n                        <FormControl id=\"name\" />\r\n\r\n                        <FormLabel> Cantidad actual *</FormLabel>\r\n                        <FormControl id=\"qty\" type=\"number\" />\r\n\r\n                        <FormLabel> Precio público *</FormLabel>\r\n                        <FormControl id=\"price\" type=\"number\" />\r\n\r\n                        <FormLabel> Precio real *</FormLabel>\r\n                        <FormControl id=\"realPrice\" type=\"number\" />\r\n\r\n                        <FormLabel> Marca *</FormLabel>\r\n                        <FormControl id=\"marca\" />\r\n\r\n                        <FormLabel> Tipo *</FormLabel>\r\n                        <FormControl id=\"type\" />\r\n                    </>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <>\r\n                        <Button variant=\"secondary\" onClick={() => { setShowAdd(false) }} >Cancelar</Button>\r\n                        <Button variant=\"primary\" onClick={addEventProd}>Guardar</Button>\r\n                    </>\r\n                </Modal.Footer>\r\n            </Modal >\r\n        )\r\n    }\r\n\r\n    function FormModalProductUpdate(props) {\r\n        return (\r\n            <Modal {...props} className=\"modal\" aria-labelledby=\"contained-modal-title-center\">\r\n                <Modal.Header closeButton>\r\n                    <h1>Modificar Producto</h1>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"modalBody\">\r\n                    <>\r\n                        <FormLabel> Código de barras *</FormLabel>\r\n                        <FormControl id=\"codeUpdate\" value={showCode} onChange={(e) => setCode(e.target.value)} />\r\n\r\n                        <FormLabel> Nombre *</FormLabel>\r\n                        <FormControl id=\"nameUpdate\" value={showName} onChange={(e) => setName(e.target.value)} />\r\n\r\n                        <FormLabel> Cantidad actual *</FormLabel>\r\n                        <FormControl id=\"qtyUpdate\" type=\"number\" value={showQty} onChange={(e) => setQty(e.target.value)} />\r\n\r\n                        <FormLabel> Precio público *</FormLabel>\r\n                        <FormControl id=\"priceUpdate\" type=\"number\" value={showPrice} onChange={(e) => setPrice(e.target.value)} />\r\n\r\n                        <FormLabel> Precio real *</FormLabel>\r\n                        <FormControl id=\"realPriceUpdate\" type=\"number\" value={showRealPrice} onChange={(e) => setRealPrice(e.target.value)} />\r\n\r\n                        <FormLabel> Marca *</FormLabel>\r\n                        <FormControl id=\"marcaUpdate\" value={showMarca} onChange={(e) => setMarca(e.target.value)} />\r\n\r\n                        <FormLabel> Tipo *</FormLabel>\r\n                        <FormControl id=\"typeUpdate\" value={showType} onChange={(e) => setType(e.target.value)} />\r\n                    </>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <>\r\n                        <Button variant=\"secondary\" >Cancelar</Button>\r\n                        <Button variant=\"primary\" onClick={() => updateEventProd(showId)}>Guardar</Button>\r\n                    </>\r\n                </Modal.Footer>\r\n            </Modal >\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <Container className=\"supportProduct\" fluid>\r\n            <Row className=\"row-header\">\r\n                <Col sm={3} md={4} lg={4}>\r\n                    <Image className=\"logo mt-4\" src={Logo} ></Image>\r\n                </Col >\r\n                <Col sm={7} md={4} lg={4} className=\"text-center\">\r\n                    <h2 className=\"mt-4\">Catálogo de Productos</h2>\r\n                </Col>\r\n                <Col sm={2} md={4} lg={4}>\r\n                    <Button style={{ float: \"right\" }} className=\"button-close mt-4\" variant=\"primary\" href=\"/logout\">Cerrar sesión</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-md-end mt-3\">\r\n                <Col>\r\n                    <Button className=\"mb-3 add-product\" variant=\"light\" onClick={() => { setShowAdd(true) }}>Nuevo Producto <FontAwesomeIcon className=\"icon-plus\" icon={faPlus} /></Button>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Table className=\"table-products\" bordered size=\"sm\" responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Código de Barras</th>\r\n                                <th>Nombre</th>\r\n                                <th>Cantidad actual</th>\r\n                                <th>Precio público</th>\r\n                                <th>Precio real</th>\r\n                                <th>Marca</th>\r\n                                <th>Tipo</th>\r\n                                {//<th>Editar</th>\r\n                                }\r\n                                <th>Eliminar</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {/* Segunda forma dinamica de datos\r\n                                {viewProducts} */}\r\n\r\n                            {listProducts.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product.code}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>{product.qty}</td>\r\n                                    <td>{product.price}</td>\r\n                                    <td>{product.realPrice}</td>\r\n                                    <td>{product.marca}</td>\r\n                                    <td>{product.type}</td>\r\n                                    {/* <td>\r\n                                         <Button className=\"mb-3 add-product\" variant=\"light\" onClick={() => {\r\n                                            getEventOneProd(product._id);\r\n                                            setShowUpdate(true);\r\n                                        }}> \r\n                                            ✏️\r\n                                        </Button>\r\n                                    </td>*/}\r\n                                    <td className=\"text-center\">\r\n                                        <Button className=\"mb-3 add-product\" variant=\"light\" onClick={() => deleteEventProd(product._id, product.name)}>\r\n                                            <FontAwesomeIcon className=\"icon-trash\" icon={faTrashAlt} />\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <FormModalProduct\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n            />\r\n            <FormModalProduct\r\n                show={showAdd}\r\n                onHide={() => setShowAdd(false)}\r\n            />\r\n            <FormModalProductUpdate\r\n                show={showUpdate}\r\n                onHide={() => setShowUpdate(false)}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n// Forma 3 (depende de mas codigo)\r\n/* //Esto podria ir dentro del input\r\nid=\"nombre de la variable\" onChange={this.manejarCambio} value={this prod} */\r\n\r\n//la variable prod es de models\r\n/* manejarCambio(evento) {\r\n    const codigo = evento.target.id;\r\n    let valor = evento.target.value;\r\n\r\n    this.setState(state => {\r\n        const productUpdate = state.prod;\r\n\r\n        if(codigo === \"codigo\") {\r\n            valor = parseFloat(valor);\r\n        }\r\n\r\n        productUpdate[codigo] = valor;\r\n        return {\r\n            prod: productUpdate,\r\n        }\r\n    });\r\n} */\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SupportProduct from './supportProduct/SupportProduct';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SupportProduct />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}